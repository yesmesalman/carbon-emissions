generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  username  String   @unique
  email     String   @unique
  password  String
  role_id   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("users")
}

model UserRole {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("user_roles")
}

model SectoralScopesAndProjectType {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("sectoral_scopes_and_project_types")
}

model SectoralScopesAndProjectTypeOption {
  id                                  Int      @id @default(autoincrement())
  name                                String
  sectoral_scopes_and_project_type_id Int
  parent_id                           Int?
  createdAt                           DateTime @default(now())
  updatedAt                           DateTime @default(now())

  @@map("sectoral_scopes_and_project_type_options")
}

model CarbonStandard {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("carbon_standards")
}

model Methodology {
  id        Int      @id @default(autoincrement())
  name      String
  link      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("methodologies")
}

model ExistingMethodology {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("existing_methodologies")
}

model Scale {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("scales")
}

model ProjectOverview {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("project_overviews")
}

model FinanceSource {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("finance_sources")
}

model RiskType {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("risk_types")
}

model ParticipantType {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("participant_types")
}

model Timeline {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("timelines")
}

model DevelopmentGoal {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("development_goals")
}

model DevelopmentGoalTarget {
  id                  Int      @id @default(autoincrement())
  name                String   @db.VarChar(800)
  development_goal_id Int
  createdAt           DateTime @default(now())
  updatedAt           DateTime @default(now())

  @@map("development_goal_target")
}

model Indicator {
  id                         Int      @id @default(autoincrement())
  name                       String   @db.VarChar(500)
  description                String?  @db.Text
  category                   String?  @db.Text
  development_goal_target_id Int
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @default(now())

  @@map("indicators")
}

model KeyMeasurement {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("key_measurements")
}

model ProjectCategory {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @default(now())
  ProjectOverviewCategory ProjectOverviewCategory[]

  @@map("project_categories")
}

model Project {
  id                        Int                       @id @default(autoincrement())
  user_id                   Int
  code                      String                    @db.VarChar(255)
  step                      Int
  createdAt                 DateTime                  @default(now())
  updatedAt                 DateTime                  @default(now())
  PorjectOverview           PorjectOverview[]
  PorjectOverviewCategories ProjectOverviewCategory[]

  @@map("projects")
}

model ProjectPIN {
  id         Int      @id @default(autoincrement())
  project_id Int
  step       Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  @@map("project_pin")
}

model PINSummary {
  id                                         Int      @id @default(autoincrement())
  pin_id                                     Int
  owner                                      String   @db.Text()
  title                                      String   @db.Text()
  country                                    String   @db.VarChar(10)
  description                                String   @db.Text()
  sectoral_scopes_and_project_type_option_id Int
  technology                                 String   @db.Text()
  standard_id                                Int
  methodology                                String   @db.Text()
  existing_methodology_id                    Int
  scale_id                                   Int
  createdAt                                  DateTime @default(now())
  updatedAt                                  DateTime @default(now())

  @@map("pin_summary")
}

model PINDetails {
  id                                          Int      @id @default(autoincrement())
  pin_id                                      Int
  description                                 String   @db.Text()
  innovation                                  String   @db.Text()
  funding_status                              String   @db.Text()
  assumptions                                 String   @db.Text()
  name                                        String
  organization                                String   @db.Text()
  address                                     String
  phone                                       String
  email                                       String
  website                                     String
  description_of_organization                 String   @db.Text()
  experience_with_carbon_markets              String   @db.Text()
  experience_with_this_project_type           String   @db.Text()
  developer_name                              String
  developer_organization                      String
  developer_address                           String
  developer_phone                             String
  developer_email                             String
  developer_website                           String
  developer_description_of_organization       String   @db.Text()
  developer_experience_with_carbon_markets    String   @db.Text()
  developer_experience_with_this_project_type String   @db.Text()
  current_status_of_project                   String   @db.Text()
  project_start_date                          String
  year_offset_delivery                        String
  project_end_date                            String
  createdAt                                   DateTime @default(now())
  updatedAt                                   DateTime @default(now())

  @@map("pin_details")
}

model PINDetailSourceOfFinance {
  id                   Int      @id @default(autoincrement())
  pin_detail_id        Int
  source_of_finance_id Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @default(now())

  @@map("pin_detail_source_of_finances")
}

model PINDetailRisk {
  id            Int      @id @default(autoincrement())
  pin_detail_id Int
  risk_type_id  Int
  description   String   @db.Text
  mitigation    String   @db.Text
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())

  @@map("pin_detail_risks")
}

model PINEmission {
  id                 Int      @id @default(autoincrement())
  pin_id             Int
  project_scale      String   @db.Text()
  description        String   @db.Text()
  calculation_method String   @db.Text()
  baseline_scenario  String   @db.Text()
  additionality      String   @db.Text()
  monitoring         String   @db.Text()
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now())

  @@map("pin_emissions")
}

model PINBenefit {
  id                         Int      @id @default(autoincrement())
  pin_id                     Int
  section_name               String
  development_goal_id        Int
  development_goal_target_id Int
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @default(now())

  @@map("pin_benefits")
}

model PINBenefitIndicator {
  id             Int      @id @default(autoincrement())
  pin_benefit_id Int
  indicator_id   Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())

  @@map("pin_benefit_indicators")
}

model PINViability {
  id                       Int      @id @default(autoincrement())
  pin_id                   Int
  leakage                  String   @db.Text()
  permanence               String   @db.Text()
  quantifiable             String   @db.Text()
  data_collection_method   String   @db.Text()
  ownership                String
  demonstration_ownership  String
  recognition              String
  baseline_scenario        String   @db.Text()
  baseline_scenario_result String   @db.Text()
  additionality            String   @db.Text()
  financial                String   @db.Text()
  technological            String   @db.Text()
  social                   String   @db.Text()
  createdAt                DateTime @default(now())
  updatedAt                DateTime @default(now())

  @@map("pin_viabilities")
}

model PINViabilityKeyMeasurement {
  id                 Int      @id @default(autoincrement())
  pin_viability_id   Int
  key_measurement_id Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now())

  @@map("pin_viability_seasurements")
}

model PorjectOverview {
  id                   Int    @id @default(autoincrement())
  project_id           Int
  name                 String
  description          String @db.Text()
  image                String
  address              String
  country              String
  latitude             String
  longitude            String
  challenge            String @db.Text()
  solution             String @db.Text()
  team                 String @db.Text()
  details              String @db.Text()
  headquarters_address String
  registration_number  String
  year_established     String
  number_of_employees  String
  about                String
  email                String
  phone                String
  twitter              String
  linkedin             String
  facebook             String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  overview Project @relation(fields: [project_id], references: [id])

  @@map("project_overview")
}

model ProjectOverviewCategory {
  id          Int             @id @default(autoincrement())
  project_id  Int
  category_id Int
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @default(now())
  Project     Project?        @relation(fields: [project_id], references: [id])
  Category    ProjectCategory @relation(fields: [category_id], references: [id])

  @@map("project_overview_categories")
}

model ProjectPDD {
  id                   Int      @id @default(autoincrement())
  project_id           Int
  standard_id          Int
  methodology_id       Int
  quarter              String
  design_document      String
  validation           String
  validation_statement String
  validation_date      String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @default(now())

  @@map("project_pdds")
}

model ProjectRegistration {
  id                    Int      @id @default(autoincrement())
  project_id            Int
  start_year            String
  end_year              String
  carbon_amount         Int
  registration_date     String
  proof_of_registration String
  registry_url          String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now())

  @@map("project_registrations")
}
